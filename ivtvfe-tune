#!/usr/bin/perl
#
# ivtvfe - ivtv-tune frontend
# Copyright (C) 2007 Trygve Vea <trygve.vea@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use warnings;
use UI::Dialog::Backend::Zenity;

my @freqtable;
my @channels;
my @channelnames;
my $i = 0;


open FH, "ivtv-tune -L 2>/dev/null|";
for (<FH>) {
    $i++;
    push (@freqtable, $i);
    chomp $_;
    push (@freqtable, $_);
}
close FH;

my $d = new UI::Dialog::Backend::Zenity(
    backtitle => 'IVTV Channel Scanner',
    title=>'IVTV Channel Scanner',
    width=>150,
    height=>300
    );

my $selection = $d->menu(
    text => "Select frequence table:", 
    list => \@freqtable
    );

if ( $selection > 0 ) {
    my $ft = $freqtable[$selection*2-1];
    my @freqs;

    open FH, "ivtv-tune -t $ft -l 2>/dev/null|";
    for(<FH>) {
        my @tmp = split(/\t/);
        push(@freqs, $tmp[1]);
    }
    close FH;

    my $freqcount = scalar @freqs;

    $d->gauge_start ( text => 'Scanning...', percentage => 0 );

    my $lastresult;
    for ($i=0;$freqs[$i];$i++) {
        open FH, "ivtv-tune -f $freqs[$i]|";
        my @result = <FH>;
        close FH;
        chomp $freqs[$i];
        if ( $result[0] =~ m/Signal\ Detected/ ) {
            if ( $lastresult) { push(@channels, $lastresult); }
            push(@channels, $freqs[$i]);
            $lastresult = '';
        } else {
            $lastresult = $freqs[$i];
        }
        $d->gauge_set( $i/$freqcount*100 );
        sleep 1;
    }
    $d->gauge_stop();
    for ( @channels ) {
        open FH, "ivtv-tune -f $_|";
        my $tuning = <FH>;
        close FH;
        sleep 2;
        my $channelname = $d->inputbox( text => "Which channel is this?", entry =>  'input?');
        push (@channelnames, $channelname);
    }
    unless (-d "$ENV{HOME}/.ivtvfe") {
        mkdir "$ENV{HOME}/.ivtvfe";
    }
    open FH, "> $ENV{HOME}/.ivtvfe/channels";
    $i = 0;
    for (@channels) {
        print FH "$_|$channelnames[$i]\n";
        $i++;
    }
    close FH;
    $d->msgbox(text=>'Channelsearch complete! :)');
}
